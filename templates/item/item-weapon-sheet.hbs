<form class="{{cssClass}}" autocomplete="off">

  {{! Header}}
  <header class="sheet-header">
    <img
      class="item-img"
      src="{{item.img}}"
      data-edit="img"
      title="{{item.name}}"
    />
    <div class="header-fields grid grid-4col">

      {{! Name}}
      <h1 class="item-name grid-span-2"><input
          name="name"
          type="text"
          value="{{item.name}}"
          placeholder="Name"
        /></h1>

      {{! Value}}
      <div class="stat">
        <label class="stat-label">{{localize "TITAN.item.value"}}</label>
        <input
          type="text"
          name="data.value"
          value="{{data.value}}"
          data-dtype="Number"
        />
      </div>

      {{! Rarity }}
      <div class="stat flexcol">
        <label class="stat-label">{{localize "TITAN.item.rarity.name"}}</label>
        <div>
          <select id="rarity">
            {{#select rarity}}
              {{#each rarityOptions as |option key|}}
                <option value="{{key}}">{{localize option}}</option>
              {{/each}}
            {{/select}}
          </select>
        </div>
      </div>
    </div>
  </header>

  <section>
    <section class="main grid grid-4col">
    <aside class="sidebar">

      {{!-- The grid classes are defined in scss/global/_grid.scss. To use,
      use both the "grid" and "grid-Ncol" class where "N" can be any number
      from 1 to 12 and will create that number of columns. --}}
      <div class="abilities flexcol">
        TEST
      </div>
    </aside>

    {{!-- For the main features list, span the right two columns --}}
    <section class="main sheet-body grid-span-3">
    {{! Sheet Tab Navigation }}
    <nav class="sheet-tabs tabs" data-group="primary">
      <a class="item" data-tab="description">Description</a>
      <a class="item" data-tab="attribute">Attribute</a>
    </nav>
    {{! Description Tab }}
    <div class="tab" data-group="primary" data-tab="description">
      {{! To render inline rolls in a TinyMCE editor, you need to pass the parent actor's (if any) roll data to the rollData prop. }}
      {{editor
        content=data.description
        target="data.description"
        rollData=rollData
        button=true
        owner=owner
        editable=editable
      }}
    </div>

    {{! Attributes Tab }}
    <div class="tab attribute" data-group="primary" data-tab="attribute">
      {{! As you add new fields, add them in here! }}
      <div class="resource">
        <label class="resource-label">Roll Formula</label>
        <input
          type="text"
          name="data.formula"
          value="{{data.formula}}"
          data-dtype="String"
        />
      </div>
    </div>
    </section>

  </section>
</form>